1179. Reformat Department Table
Easy
556
440
SQL Schema
Table: Department

+-------------+---------+
| Column Name | Type    |
+-------------+---------+
| id          | int     |
| revenue     | int     |
| month       | varchar |
+-------------+---------+
(id, month) is the primary key of this table.
The table has information about the revenue of each department per month.
The month has values in ["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"].
 

Write an SQL query to reformat the table such that there is a department id column and a revenue column for each month.

Return the result table in any order.

The query result format is in the following example.

 

Example 1:

Input: 
Department table:
+------+---------+-------+
| id   | revenue | month |
+------+---------+-------+
| 1    | 8000    | Jan   |
| 2    | 9000    | Jan   |
| 3    | 10000   | Feb   |
| 1    | 7000    | Feb   |
| 1    | 6000    | Mar   |
+------+---------+-------+
Output: 
+------+-------------+-------------+-------------+-----+-------------+
| id   | Jan_Revenue | Feb_Revenue | Mar_Revenue | ... | Dec_Revenue |
+------+-------------+-------------+-------------+-----+-------------+
| 1    | 8000        | 7000        | 6000        | ... | null        |
| 2    | 9000        | null        | null        | ... | null        |
| 3    | null        | 10000       | null        | ... | null        |
+------+-------------+-------------+-------------+-----+-------------+
Explanation: The revenue from Apr to Dec is null.
Note that the result table has 13 columns (1 for the department id + 12 for the months).

--CREATING THE TABLE AND INSERTING THE VALUES 
Create table Department_1189 (id int, revenue int, month varchar(5));
Truncate table Department_1189;
insert into Department_1189 (id, revenue, month) values ('1', '8000', 'Jan');
insert into Department_1189 (id, revenue, month) values ('2', '9000', 'Jan');
insert into Department_1189 (id, revenue, month) values ('3', '10000', 'Feb');
insert into Department_1189 (id, revenue, month) values ('1', '7000', 'Feb');
insert into Department_1189 (id, revenue, month) values ('1', '6000', 'Mar');


--Displaying the column values
+------+---------+-------+
| id   | revenue | month |
+------+---------+-------+
|    1 |    8000 | Jan   |
|    2 |    9000 | Jan   |
|    3 |   10000 | Feb   |
|    1 |    7000 | Feb   |
|    1 |    6000 | Mar   |
+------+---------+-------+

/*The Solution is */
SELECT * FROM Department_1189;
SELECT id ,
SUM(CASE WHEN month = 'Jan' THEN revenue ELSE NULL END) as Jan_revenue,
SUM(CASE WHEN month = 'Feb' THEN revenue ELSE NULL END) as Feb_revenue,
SUM(CASE WHEN month = 'Mar' THEN revenue ELSE NULL END) as Mar_revenue,
SUM(CASE WHEN month = 'Apr' THEN revenue ELSE NULL END) as Apr_revenue,
SUM(CASE WHEN month = 'May' THEN revenue ELSE NULL END) as May_revenue,
SUM(CASE WHEN month = 'Jun' THEN revenue ELSE NULL END) as Jun_revenue,
SUM(CASE WHEN month = 'Jul' THEN revenue ELSE NULL END) as Jul_revenue,
SUM(CASE WHEN month = 'Aug' THEN revenue ELSE NULL END) as Aug_revenue,
SUM(CASE WHEN month = 'Sep' THEN revenue ELSE NULL END) as Sep_revenue,
SUM(CASE WHEN month = 'Oct' THEN revenue ELSE NULL END) as Oct_revenue,
SUM(CASE WHEN month = 'Nov' THEN revenue ELSE NULL END) as Nov_revenue,
SUM(CASE WHEN month = 'Dec' THEN revenue ELSE NULL END) as Dec_revenue
FROM Department_1189 
GROUP BY id ;
